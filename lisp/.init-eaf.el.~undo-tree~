(undo-tree-save-format-version . 1)
"6365791faa5b38bd8ce445c435f59fd393154d99"
[nil nil nil nil (26273 48035 974707 0) 0 nil]
([nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 445) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) 446 (t 26273 47579 0 0)) nil (26273 48035 974704 0) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -443) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -444) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) 445) nil (26273 48035 974687 0) 0 nil])
([nil nil ((#("/opt/homebrew/bin/python3" 0 25 (face font-lock-string-face fontified t)) . -469) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -3) (undo-tree-id156 . -3) (undo-tree-id157 . -3) (undo-tree-id158 . -3) (undo-tree-id159 . -3) (undo-tree-id160 . -3) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -5) (undo-tree-id168 . -5) (undo-tree-id169 . -5) (undo-tree-id170 . -5) (undo-tree-id171 . -5) (undo-tree-id172 . -5) (undo-tree-id173 . -6) (undo-tree-id174 . -6) (undo-tree-id175 . -6) (undo-tree-id176 . -6) (undo-tree-id177 . -6) (undo-tree-id178 . -6) (undo-tree-id179 . -7) (undo-tree-id180 . -7) (undo-tree-id181 . -7) (undo-tree-id182 . -7) (undo-tree-id183 . -7) (undo-tree-id184 . -7) (undo-tree-id185 . -8) (undo-tree-id186 . -8) (undo-tree-id187 . -8) (undo-tree-id188 . -8) (undo-tree-id189 . -8) (undo-tree-id190 . -8) (undo-tree-id191 . -9) (undo-tree-id192 . -9) (undo-tree-id193 . -9) (undo-tree-id194 . -9) (undo-tree-id195 . -9) (undo-tree-id196 . -9) (undo-tree-id197 . -10) (undo-tree-id198 . -10) (undo-tree-id199 . -10) (undo-tree-id200 . -10) (undo-tree-id201 . -10) (undo-tree-id202 . -10) (undo-tree-id203 . -11) (undo-tree-id204 . -11) (undo-tree-id205 . -11) (undo-tree-id206 . -11) (undo-tree-id207 . -11) (undo-tree-id208 . -11) (undo-tree-id209 . -12) (undo-tree-id210 . -12) (undo-tree-id211 . -12) (undo-tree-id212 . -12) (undo-tree-id213 . -12) (undo-tree-id214 . -12) (undo-tree-id215 . -13) (undo-tree-id216 . -13) (undo-tree-id217 . -13) (undo-tree-id218 . -13) (undo-tree-id219 . -13) (undo-tree-id220 . -13) (undo-tree-id221 . -14) (undo-tree-id222 . -14) (undo-tree-id223 . -14) (undo-tree-id224 . -14) (undo-tree-id225 . -14) (undo-tree-id226 . -14) (undo-tree-id227 . -15) (undo-tree-id228 . -15) (undo-tree-id229 . -15) (undo-tree-id230 . -15) (undo-tree-id231 . -15) (undo-tree-id232 . -15) (undo-tree-id233 . -16) (undo-tree-id234 . -16) (undo-tree-id235 . -16) (undo-tree-id236 . -16) (undo-tree-id237 . -16) (undo-tree-id238 . -16) (undo-tree-id239 . -17) (undo-tree-id240 . -17) (undo-tree-id241 . -17) (undo-tree-id242 . -17) (undo-tree-id243 . -17) (undo-tree-id244 . -17) (undo-tree-id245 . -17) (undo-tree-id246 . -17) (undo-tree-id247 . -17) (undo-tree-id248 . -17) (undo-tree-id249 . -17) (undo-tree-id250 . -17) (undo-tree-id251 . -17) (undo-tree-id252 . -18) (undo-tree-id253 . -18) (undo-tree-id254 . -18) (undo-tree-id255 . -18) (undo-tree-id256 . -18) (undo-tree-id257 . -18) (undo-tree-id258 . -19) (undo-tree-id259 . -19) (undo-tree-id260 . -19) (undo-tree-id261 . -19) (undo-tree-id262 . -19) (undo-tree-id263 . -19) (undo-tree-id264 . -20) (undo-tree-id265 . -20) (undo-tree-id266 . -20) (undo-tree-id267 . -20) (undo-tree-id268 . -20) (undo-tree-id269 . -20) (undo-tree-id270 . -21) (undo-tree-id271 . -21) (undo-tree-id272 . -21) (undo-tree-id273 . -21) (undo-tree-id274 . -21) (undo-tree-id275 . -21) (undo-tree-id276 . -22) (undo-tree-id277 . -22) (undo-tree-id278 . -22) (undo-tree-id279 . -22) (undo-tree-id280 . -22) (undo-tree-id281 . -22) (undo-tree-id282 . -23) (undo-tree-id283 . -23) (undo-tree-id284 . -23) (undo-tree-id285 . -23) (undo-tree-id286 . -23) (undo-tree-id287 . -23) (undo-tree-id288 . -24) (undo-tree-id289 . -24) (undo-tree-id290 . -24) (undo-tree-id291 . -24) (undo-tree-id292 . -24) (undo-tree-id293 . -24) (undo-tree-id294 . -25) (undo-tree-id295 . -25) (undo-tree-id296 . -25) (undo-tree-id297 . -25) (undo-tree-id298 . -25) (undo-tree-id299 . -25) (undo-tree-id300 . -25) (undo-tree-id301 . -25) (undo-tree-id302 . -25) (undo-tree-id303 . -25) (undo-tree-id304 . -25) (undo-tree-id305 . -25) (undo-tree-id306 . -25) (undo-tree-id307 . -25) (undo-tree-id308 . -25) (undo-tree-id309 . -25) (undo-tree-id310 . -25) (undo-tree-id311 . -25) (undo-tree-id312 . -25) (undo-tree-id313 . -25) (undo-tree-id314 . -25) (undo-tree-id315 . -25) (undo-tree-id316 . -25) (undo-tree-id317 . -25) (undo-tree-id318 . -25) (undo-tree-id319 . -25) (undo-tree-id320 . -25) (undo-tree-id321 . -25) (undo-tree-id322 . -25) (undo-tree-id323 . -25) (undo-tree-id324 . -25) (undo-tree-id325 . -25) (undo-tree-id326 . -25) (undo-tree-id327 . -25) (undo-tree-id328 . -25) (undo-tree-id329 . -25) (undo-tree-id330 . -25) (undo-tree-id331 . -25) (undo-tree-id332 . -25) (undo-tree-id333 . -25) (undo-tree-id334 . -25) (undo-tree-id335 . -25) (undo-tree-id336 . -25) (undo-tree-id337 . -25) (undo-tree-id338 . -25) (undo-tree-id339 . -25) (undo-tree-id340 . -25) (undo-tree-id341 . -25) (undo-tree-id342 . -25) (undo-tree-id343 . -25) (undo-tree-id344 . -25) (undo-tree-id345 . -25) (undo-tree-id346 . -25) (undo-tree-id347 . -25) (undo-tree-id348 . -25) (undo-tree-id349 . -25) (undo-tree-id350 . -25) (undo-tree-id351 . -25) (undo-tree-id352 . -25) (undo-tree-id353 . -25) (undo-tree-id354 . -25) (undo-tree-id355 . -25) 494 (t 26273 48035 0 0)) nil (26273 48070 85324 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 489 . 490) (nil fontified nil 469 . 490) (469 . 490)) nil (26273 48070 85183 0) 0 nil])
([nil nil ((#("\\" 0 1 (help-echo "This \\ has no effect" face (font-lock-warning-face font-lock-string-face) fontified t)) . -479) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) 480 (t 26273 48070 0 0)) nil (26273 48079 313059 0) 0 nil])
([nil nil ((479 . 480)) nil (26273 48079 313051 0) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-string-face fontified t)) . -471) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) 472) nil (26273 48079 313049 0) 0 nil])
([nil nil ((471 . 472)) nil (26273 48079 313017 0) 0 nil])
([nil nil ((490 . 501)) nil (26273 48079 313012 0) 0 nil])
([nil nil ((apply -3 441 507 undo--wrap-and-run-primitive-undo 441 507 ((443 . 446) 501))) nil (26273 48730 20410 0) 0 nil])
([nil nil ((apply 3 538 559 undo--wrap-and-run-primitive-undo 538 559 ((#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -540) 562))) nil (26273 48923 92759 0) 0 nil])
([nil nil ((562 . 563)) nil (26273 48923 92758 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -562) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 563) nil (26273 48923 92755 0) 0 nil])
([nil nil ((apply -3 538 563 undo--wrap-and-run-primitive-undo 538 563 ((540 . 543) 558))) nil (26273 49358 615033 0) 0 nil])
([nil nil ((565 . 566)) nil (26273 49358 615032 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -565) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 566) nil (26273 49358 615028 0) 0 nil])
([nil nil ((apply 3 441 503 undo--wrap-and-run-primitive-undo 441 503 ((#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -443)))) nil (26273 49783 16798 0) 0 nil])
([nil nil ((apply 3 535 556 undo--wrap-and-run-primitive-undo 535 556 ((#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -537) 554))) nil (26273 50838 507038 0) 0 nil])
([nil nil ((apply -3 930 964 undo--wrap-and-run-primitive-undo 930 964 ((932 . 935) 960))) nil (26273 50932 700830 0) 0 nil])
([nil nil ((apply -3 834 872 undo--wrap-and-run-primitive-undo 834 872 ((836 . 839) 834))) nil (26273 50936 493125 0) 0 nil])
([nil nil ((apply 3 834 868 undo--wrap-and-run-primitive-undo 834 868 ((#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -836)))) nil (26273 61745 231281 0) 0 nil])
([nil nil ((apply 3 930 960 undo--wrap-and-run-primitive-undo 930 960 ((#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -932)))) nil (26273 61745 231277 0) 0 nil])
([nil nil ((apply -3 535 560 undo--wrap-and-run-primitive-undo 535 560 ((537 . 540) 551))) nil (26274 65407 8206 0) 0 nil])
([nil nil ((apply -3 441 507 undo--wrap-and-run-primitive-undo 441 507 ((443 . 446)))) nil (26274 65412 71978 0) 0 nil])
([nil nil ((apply -3 765 798 undo--wrap-and-run-primitive-undo 765 798 ((767 . 770)))) nil (26275 3775 76987 0) 0 nil])
([nil nil ((#(";; (require 'eaf-camera)" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 24 (face font-lock-comment-face fontified t)) . 589)) nil (26275 3775 76987 0) 0 nil])
([nil nil ((#("
  
  " 0 4 (fontified t) 4 6 (fontified t)) . 583) (undo-tree-id33 . -6) 589) nil (26275 3775 76985 0) 0 nil])
([nil nil ((583 . 586)) nil (26275 3775 76982 0) 0 nil])
([nil nil ((#(";; (require 'eaf-video-player)" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 30 (face font-lock-comment-face fontified t)) . 619)) nil (26275 3775 76981 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 619)) nil (26275 3775 76981 0) 0 nil])
([nil nil ((#("  ;; (require 'eaf-music-player)" 0 2 (fontified t) 2 5 (face font-lock-comment-delimiter-face fontified t) 5 32 (face font-lock-comment-face fontified t)) . 619)) nil (26275 3775 76979 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 619)) nil (26275 3775 76976 0) 0 nil])
([nil nil ((#("  ;; (require 'eaf-pyqterminal)" 0 2 (fontified t) 2 5 (face font-lock-comment-delimiter-face fontified t) 5 31 (face font-lock-comment-face fontified t)) . 619)) nil (26275 3775 76975 0) 0 nil])
([nil nil ((620 . 622) (619 . 621)) nil (26275 3775 76974 0) 0 nil])
([nil nil ((622 . 647) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 622)) nil (26275 3775 76974 0) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -646) (undo-tree-id32 . -1) 647) nil (26275 3775 76973 0) 0 nil])
([nil nil ((#("player" 0 6 (face font-lock-constant-face fontified t)) . 639)) nil (26275 3775 76972 0) 0 nil])
([nil nil ((#("video-" 0 6 (face font-lock-constant-face fontified t)) . -633) (undo-tree-id31 . -6) 639) nil (26275 3775 76971 0) 0 nil])
([nil nil ((633 . 634)) nil (26275 3775 76970 0) 0 nil])
([nil nil ((634 . 643) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 634)) nil (26275 3775 76968 0) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -642) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 643) nil (26275 3775 76964 0) 0 nil])
([nil nil ((apply -3 617 646 undo--wrap-and-run-primitive-undo 617 646 ((619 . 622) 642))) nil (26275 3949 965149 0) 0 nil])
([nil nil ((#("  ;; (require 'eaf-terminal)" 0 2 (fontified t) 2 5 (face font-lock-comment-delimiter-face fontified t) 5 6 (face font-lock-comment-face fontified t) 6 13 (face font-lock-comment-face fontified t) 13 15 (face font-lock-comment-face fontified t) 15 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t)) . 617)) nil (26275 3949 965148 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 616) (undo-tree-id2 . -1) 617) nil (26275 3949 965148 0) 0 nil])
([nil nil ((#(";; (require 'eaf-file-manager)" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 30 (face font-lock-comment-face fontified t)) . 642)) nil (26275 3949 965146 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 642)) nil (26275 3949 965145 0) 0 nil])
([nil nil ((#("
  " 0 1 (face font-lock-comment-face fontified t) 1 3 (fontified t)) . 639) (undo-tree-id1 . -3) 642) nil (26275 3949 965144 0) 0 nil])
([nil nil ((#(";; eaf-file-manager  " 0 3 (face font-lock-comment-delimiter-face fontified t) 3 19 (face font-lock-comment-face fontified t) 19 21 (face font-lock-comment-face fontified t)) . 620)) nil (26275 3949 965143 0) 0 nil])
([nil nil ((#("

  " 0 1 (fontified t) 1 2 (fontified t) 2 4 (fontified t)) . 616) (undo-tree-id0 . -4) 620) nil (26275 3949 965141 0) 0 nil])
([nil current ((616 . 619)) nil (26275 3949 965121 0) 0 nil])
nil
