(undo-tree-save-format-version . 1)
"020a0e6be1dffa1cc3146fbaefdb5e72457e629a"
[nil nil nil nil (26274 64969 571591 0) 0 nil]
([nil nil ((nil rear-nonsticky nil 437 . 438) (nil fontified nil 1 . 438) (1 . 438) (t 26274 64969 0 0)) nil (26274 64977 156543 0) 0 nil])
([nil nil ((348 . 354) (#("            " 0 12 (fontified nil)) . 348) (319 . 328) (#("                      " 0 22 (fontified nil)) . 319) (292 . 301) (#("                      " 0 22 (fontified nil)) . 292) (259 . 265) (#("            " 0 12 (fontified nil)) . 259) (233 . 239) (#("            " 0 12 (fontified nil)) . 233) (#("  " 0 2 (fontified nil)) . -203) (#("  " 0 2 (fontified nil)) . -175) (#("  " 0 2 (fontified nil)) . -137) (#("  " 0 2 (fontified nil)) . -82) (#("  " 0 2 (fontified nil)) . -44) (#("  " 0 2 (fontified nil)) . -34) (#("  " 0 2 (fontified nil)) . -22) 438) nil (26274 64977 156540 0) 0 nil])
([nil nil ((380 . 381)) nil (26274 64977 156535 0) 0 nil])
([nil nil ((1 . 2) (t 26274 64977 0 0)) nil (26274 65027 940146 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 219 . 220) (nil fontified nil 214 . 220) (nil fontified nil 210 . 214) (nil fontified nil 209 . 210) (nil fontified nil 208 . 209) (nil fontified nil 206 . 208) (nil fontified nil 151 . 206) (nil fontified nil 148 . 151) (nil fontified nil 117 . 148) (nil fontified nil 114 . 117) (nil fontified nil 113 . 114) (nil fontified nil 111 . 113) (nil fontified nil 99 . 111) (nil fontified nil 95 . 99) (nil fontified nil 94 . 95) (nil fontified nil 5 . 94) (nil fontified nil 1 . 5) (1 . 220)) nil (26274 65027 940145 0) 0 nil])
([nil nil ((118 . 122) ("kimi" . -118) (#("Copilot" 0 7 (face font-lock-comment-face fontified t)) . -118) (125 . 129) (40 . 44) ("kimi" . -40) (#("Copilot" 0 7 (face font-lock-comment-face fontified nil)) . -40) (47 . 51) (#("copilot" 0 7 (face font-lock-comment-face fontified t)) . -10) (17 . 21)) nil (26274 65027 940140 0) 0 nil])
([nil nil ((#("GitHub " 0 7 (face font-lock-comment-face fontified t)) . -111) (undo-tree-id59 . -7) 118) nil (26274 65027 940138 0) 0 nil])
([nil nil ((#("GitHub" 0 6 (face font-lock-comment-face fontified t)) . -33) (undo-tree-id58 . -6) 39) nil (26274 65027 940136 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 32) (undo-tree-id57 . -1) 33) nil (26274 65027 940134 0) 0 nil])
([nil nil ((#("https://cloud.tencent.com/developer/article/2347983" 0 51 (face font-lock-comment-face fontified t)) . 131) (undo-tree-id0 . -22) (undo-tree-id1 . -22) (undo-tree-id2 . -22) (undo-tree-id3 . -22) (undo-tree-id4 . -22) (undo-tree-id5 . -22) (undo-tree-id6 . -22) (undo-tree-id7 . -22) (undo-tree-id8 . -22) (undo-tree-id9 . -22) (undo-tree-id10 . -22) (undo-tree-id11 . -22) (undo-tree-id12 . -22) (undo-tree-id13 . -22) (undo-tree-id14 . -22) (undo-tree-id15 . -22) (undo-tree-id16 . -22) (undo-tree-id17 . -14) (undo-tree-id18 . -14) (undo-tree-id19 . -14) (undo-tree-id20 . -14) (undo-tree-id21 . -14) (undo-tree-id22 . -14) (undo-tree-id23 . -14) (undo-tree-id24 . -14) (undo-tree-id25 . -14) (undo-tree-id26 . -14) (undo-tree-id27 . -14) (undo-tree-id28 . -14) (undo-tree-id29 . -14) (undo-tree-id30 . -14) (undo-tree-id31 . -14) (undo-tree-id32 . -14) (undo-tree-id33 . -8) (undo-tree-id34 . -8) (undo-tree-id35 . -8) (undo-tree-id36 . -8) (undo-tree-id37 . -8) (undo-tree-id38 . -8) (undo-tree-id39 . -8) (undo-tree-id40 . -8) (undo-tree-id41 . -8) (undo-tree-id42 . -8) (undo-tree-id43 . -8) (undo-tree-id44 . -8) (undo-tree-id45 . -8) (undo-tree-id46 . -8) (undo-tree-id47 . -8) (undo-tree-id48 . -8) (undo-tree-id49 . -8) (undo-tree-id50 . -8) (undo-tree-id51 . -8) (undo-tree-id52 . -8) (undo-tree-id53 . -8) (undo-tree-id54 . -8) (undo-tree-id55 . -8) (undo-tree-id56 . -51)) nil (26274 65027 940127 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 181 . 182) (nil fontified nil 131 . 182) (131 . 182) (t 26274 65027 0 0)) nil (26274 65035 458426 0) 0 nil])
([nil nil ((578 . 579) (t 26274 65035 0 0)) nil (26274 65042 715665 0) 0 nil])
([nil nil ((579 . 599)) nil (26274 65042 715664 0) 0 nil])
([nil nil ((599 . 600)) nil (26274 65042 715663 0) 0 nil])
([nil nil ((600 . 604)) nil (26274 65042 715663 0) 0 nil])
([nil nil ((604 . 626)) nil (26274 65042 715662 0) 0 nil])
([nil nil ((626 . 627)) nil (26274 65042 715657 0) 0 nil])
([nil nil ((576 . 579) (t 26274 65042 0 0)) nil (26275 1556 902267 0) 0 nil])
([nil nil ((575 . 577)) nil (26275 1556 902262 0) 0 nil])
([nil nil ((#("(gptel-make-openai \"Moonshot\"
			   :key 'gptel-api-key
			   :models '(\"moonshot-v1-8k\"
				     \"moonshot-v1-32k\"
				     \"moonshot-v1-128k\")
			   :host \"api.moonshot.cn\")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t) 1 19 (fontified t) 19 29 (face font-lock-string-face fontified t) 29 36 (fontified t) 36 40 (face font-lock-builtin-face fontified t) 40 62 (fontified t) 62 69 (face font-lock-builtin-face fontified t) 69 71 (fontified t) 71 72 (face (rainbow-delimiters-depth-4-face) fontified t) 72 88 (face font-lock-string-face fontified t) 88 98 (fontified t) 98 115 (face font-lock-string-face fontified t) 115 125 (fontified t) 125 143 (face font-lock-string-face fontified t) 143 144 (face (rainbow-delimiters-depth-4-face) fontified t) 144 145 (fontified t) 145 151 (fontified t) 151 156 (face font-lock-builtin-face fontified t) 156 157 (fontified t) 157 174 (face font-lock-string-face fontified t) 174 175 (face (rainbow-delimiters-depth-3-face) fontified t)) . 400) (undo-tree-id0 . -175) (undo-tree-id1 . -31) (undo-tree-id2 . -7) (undo-tree-id3 . -31) (undo-tree-id4 . -175) (undo-tree-id5 . -175) (undo-tree-id6 . -175) (undo-tree-id7 . -175) (undo-tree-id8 . -175) (undo-tree-id9 . -175) (undo-tree-id10 . -175) (undo-tree-id11 . -175) (undo-tree-id12 . -175) (undo-tree-id13 . -175) (undo-tree-id14 . -175) (undo-tree-id15 . -175) (undo-tree-id16 . -175) (undo-tree-id17 . -175) (undo-tree-id18 . -175) (undo-tree-id19 . -175) (undo-tree-id20 . -175) (undo-tree-id21 . -175) (undo-tree-id22 . -175) (undo-tree-id23 . -175) (undo-tree-id24 . -175) (undo-tree-id25 . -175) (undo-tree-id26 . -175) (undo-tree-id27 . -175) (undo-tree-id28 . -175) (undo-tree-id29 . -175) (undo-tree-id30 . -175) (undo-tree-id31 . -175) (undo-tree-id32 . -175) (undo-tree-id33 . -175) (undo-tree-id34 . -175) (undo-tree-id35 . -175) (undo-tree-id36 . -175) (undo-tree-id37 . -175) (undo-tree-id38 . -175) (undo-tree-id39 . -175) (undo-tree-id40 . -175) (undo-tree-id41 . -175) (undo-tree-id42 . -175) (undo-tree-id43 . -175) (undo-tree-id44 . -175) (undo-tree-id45 . -175) (undo-tree-id46 . -175) (undo-tree-id47 . -175) (undo-tree-id48 . -175) (undo-tree-id49 . -175) (undo-tree-id50 . -175) (undo-tree-id51 . -175) (undo-tree-id52 . -175) (undo-tree-id53 . -175) (undo-tree-id54 . -175) (undo-tree-id55 . -175) (undo-tree-id56 . -175) (undo-tree-id57 . -175) (undo-tree-id58 . -175) (undo-tree-id59 . -175) (undo-tree-id60 . -174) (undo-tree-id61 . -174) (undo-tree-id62 . -174) (undo-tree-id63 . -174) (undo-tree-id64 . -174) (undo-tree-id65 . -174) (undo-tree-id66 . -174) (undo-tree-id67 . -174) (undo-tree-id68 . -174) (undo-tree-id69 . -174) (undo-tree-id70 . -174) (undo-tree-id71 . -173) (undo-tree-id72 . -173) (undo-tree-id73 . -173) (undo-tree-id74 . -173) (undo-tree-id75 . -173) (undo-tree-id76 . -173) (undo-tree-id77 . -173) (undo-tree-id78 . -173) (undo-tree-id79 . -173) (undo-tree-id80 . -173) (undo-tree-id81 . -173) (undo-tree-id82 . -136) (undo-tree-id83 . -136) (undo-tree-id84 . -136) (undo-tree-id85 . -136) (undo-tree-id86 . -136) (undo-tree-id87 . -136) (undo-tree-id88 . -136) (undo-tree-id89 . -136) (undo-tree-id90 . -136) (undo-tree-id91 . -136) (undo-tree-id92 . -136) (undo-tree-id93 . -135) (undo-tree-id94 . -135) (undo-tree-id95 . -135) (undo-tree-id96 . -135) (undo-tree-id97 . -135) (undo-tree-id98 . -135) (undo-tree-id99 . -135) (undo-tree-id100 . -135) (undo-tree-id101 . -135) (undo-tree-id102 . -135) (undo-tree-id103 . -135) (undo-tree-id104 . -134) (undo-tree-id105 . -134) (undo-tree-id106 . -134) (undo-tree-id107 . -134) (undo-tree-id108 . -134) (undo-tree-id109 . -134) (undo-tree-id110 . -134) (undo-tree-id111 . -134) (undo-tree-id112 . -134) (undo-tree-id113 . -134) (undo-tree-id114 . -134) (undo-tree-id115 . -133) (undo-tree-id116 . -133) (undo-tree-id117 . -133) (undo-tree-id118 . -133) (undo-tree-id119 . -133) (undo-tree-id120 . -133) (undo-tree-id121 . -133) (undo-tree-id122 . -133) (undo-tree-id123 . -133) (undo-tree-id124 . -133) (undo-tree-id125 . -133) (undo-tree-id126 . -133) (undo-tree-id127 . -133) (undo-tree-id128 . -133) (undo-tree-id129 . -133) (undo-tree-id130 . -133) (undo-tree-id131 . -133) (undo-tree-id132 . -133) (undo-tree-id133 . -132) (undo-tree-id134 . -132) (undo-tree-id135 . -132) (undo-tree-id136 . -132) (undo-tree-id137 . -132) (undo-tree-id138 . -132) (undo-tree-id139 . -131) (undo-tree-id140 . -131) (undo-tree-id141 . -131) (undo-tree-id142 . -131) (undo-tree-id143 . -131) (undo-tree-id144 . -131) (undo-tree-id145 . -131) (undo-tree-id146 . -131) (undo-tree-id147 . -131) (undo-tree-id148 . -131) (undo-tree-id149 . -131) (undo-tree-id150 . -130) (undo-tree-id151 . -130) (undo-tree-id152 . -130) (undo-tree-id153 . -130) (undo-tree-id154 . -130) (undo-tree-id155 . -130) (undo-tree-id156 . -130) (undo-tree-id157 . -130) (undo-tree-id158 . -130) (undo-tree-id159 . -130) (undo-tree-id160 . -130) (undo-tree-id161 . -129) (undo-tree-id162 . -129) (undo-tree-id163 . -129) (undo-tree-id164 . -129) (undo-tree-id165 . -129) (undo-tree-id166 . -129) (undo-tree-id167 . -129) (undo-tree-id168 . -129) (undo-tree-id169 . -129) (undo-tree-id170 . -129) (undo-tree-id171 . -129) (undo-tree-id172 . -101) (undo-tree-id173 . -101) (undo-tree-id174 . -101) (undo-tree-id175 . -101) (undo-tree-id176 . -101) (undo-tree-id177 . -101) (undo-tree-id178 . -101) (undo-tree-id179 . -101) (undo-tree-id180 . -101) (undo-tree-id181 . -101) (undo-tree-id182 . -101) (undo-tree-id183 . -100) (undo-tree-id184 . -100) (undo-tree-id185 . -100) (undo-tree-id186 . -100) (undo-tree-id187 . -100) (undo-tree-id188 . -100) (undo-tree-id189 . -100) (undo-tree-id190 . -100) (undo-tree-id191 . -100) (undo-tree-id192 . -100) (undo-tree-id193 . -100) (undo-tree-id194 . -99) (undo-tree-id195 . -99) (undo-tree-id196 . -99) (undo-tree-id197 . -99) (undo-tree-id198 . -99) (undo-tree-id199 . -99) (undo-tree-id200 . -99) (undo-tree-id201 . -99) (undo-tree-id202 . -99) (undo-tree-id203 . -99) (undo-tree-id204 . -99) (undo-tree-id205 . -98) (undo-tree-id206 . -98) (undo-tree-id207 . -98) (undo-tree-id208 . -98) (undo-tree-id209 . -98) (undo-tree-id210 . -98) (undo-tree-id211 . -98) (undo-tree-id212 . -98) (undo-tree-id213 . -98) (undo-tree-id214 . -98) (undo-tree-id215 . -98) (undo-tree-id216 . -97) (undo-tree-id217 . -97) (undo-tree-id218 . -97) (undo-tree-id219 . -97) (undo-tree-id220 . -97) (undo-tree-id221 . -97) (undo-tree-id222 . -97) (undo-tree-id223 . -97) (undo-tree-id224 . -97) (undo-tree-id225 . -97) (undo-tree-id226 . -97) (undo-tree-id227 . -96) (undo-tree-id228 . -96) (undo-tree-id229 . -96) (undo-tree-id230 . -96) (undo-tree-id231 . -96) (undo-tree-id232 . -96) (undo-tree-id233 . -96) (undo-tree-id234 . -96) (undo-tree-id235 . -96) (undo-tree-id236 . -96) (undo-tree-id237 . -96) (undo-tree-id238 . -69) (undo-tree-id239 . -69) (undo-tree-id240 . -69) (undo-tree-id241 . -69) (undo-tree-id242 . -69) (undo-tree-id243 . -69) (undo-tree-id244 . -69) (undo-tree-id245 . -69) (undo-tree-id246 . -69) (undo-tree-id247 . -69) (undo-tree-id248 . -69) (undo-tree-id249 . -68) (undo-tree-id250 . -68) (undo-tree-id251 . -68) (undo-tree-id252 . -68) (undo-tree-id253 . -68) (undo-tree-id254 . -68) (undo-tree-id255 . -68) (undo-tree-id256 . -68) (undo-tree-id257 . -68) (undo-tree-id258 . -68) (undo-tree-id259 . -68) (undo-tree-id260 . -67) (undo-tree-id261 . -67) (undo-tree-id262 . -67) (undo-tree-id263 . -67) (undo-tree-id264 . -67) (undo-tree-id265 . -67) (undo-tree-id266 . -67) (undo-tree-id267 . -67) (undo-tree-id268 . -67) (undo-tree-id269 . -67) (undo-tree-id270 . -67) (undo-tree-id271 . -66) (undo-tree-id272 . -66) (undo-tree-id273 . -66) (undo-tree-id274 . -66) (undo-tree-id275 . -66) (undo-tree-id276 . -66) (undo-tree-id277 . -66) (undo-tree-id278 . -66) (undo-tree-id279 . -66) (undo-tree-id280 . -66) (undo-tree-id281 . -66) (undo-tree-id282 . -65) (undo-tree-id283 . -65) (undo-tree-id284 . -65) (undo-tree-id285 . -65) (undo-tree-id286 . -65) (undo-tree-id287 . -65) (undo-tree-id288 . -65) (undo-tree-id289 . -65) (undo-tree-id290 . -65) (undo-tree-id291 . -65) (undo-tree-id292 . -65) (undo-tree-id293 . -64) (undo-tree-id294 . -64) (undo-tree-id295 . -64) (undo-tree-id296 . -64) (undo-tree-id297 . -64) (undo-tree-id298 . -64) (undo-tree-id299 . -64) (undo-tree-id300 . -64) (undo-tree-id301 . -64) (undo-tree-id302 . -64) (undo-tree-id303 . -64) (undo-tree-id304 . -63) (undo-tree-id305 . -63) (undo-tree-id306 . -63) (undo-tree-id307 . -63) (undo-tree-id308 . -63) (undo-tree-id309 . -63) (undo-tree-id310 . -63) (undo-tree-id311 . -63) (undo-tree-id312 . -63) (undo-tree-id313 . -63) (undo-tree-id314 . -63) (undo-tree-id315 . -36) (undo-tree-id316 . -36) (undo-tree-id317 . -36) (undo-tree-id318 . -36) (undo-tree-id319 . -36) (undo-tree-id320 . -36) (undo-tree-id321 . -36) (undo-tree-id322 . -36) (undo-tree-id323 . -36) (undo-tree-id324 . -36) (undo-tree-id325 . -36) (undo-tree-id326 . -35) (undo-tree-id327 . -35) (undo-tree-id328 . -35) (undo-tree-id329 . -35) (undo-tree-id330 . -35) (undo-tree-id331 . -35) (undo-tree-id332 . -35) (undo-tree-id333 . -35) (undo-tree-id334 . -35) (undo-tree-id335 . -35) (undo-tree-id336 . -35) (undo-tree-id337 . -34) (undo-tree-id338 . -34) (undo-tree-id339 . -34) (undo-tree-id340 . -34) (undo-tree-id341 . -34) (undo-tree-id342 . -34) (undo-tree-id343 . -34) (undo-tree-id344 . -34) (undo-tree-id345 . -34) (undo-tree-id346 . -34) (undo-tree-id347 . -34) (undo-tree-id348 . -33) (undo-tree-id349 . -33) (undo-tree-id350 . -33) (undo-tree-id351 . -33) (undo-tree-id352 . -33) (undo-tree-id353 . -33) (undo-tree-id354 . -33) (undo-tree-id355 . -33) (undo-tree-id356 . -33) (undo-tree-id357 . -33) (undo-tree-id358 . -33) (undo-tree-id359 . -32) (undo-tree-id360 . -32) (undo-tree-id361 . -32) (undo-tree-id362 . -32) (undo-tree-id363 . -32) (undo-tree-id364 . -32) (undo-tree-id365 . -32) (undo-tree-id366 . -32) (undo-tree-id367 . -32) (undo-tree-id368 . -32) (undo-tree-id369 . -32) (undo-tree-id370 . -11) (undo-tree-id371 . -11) (undo-tree-id372 . -11) (undo-tree-id373 . -11) (undo-tree-id374 . -11) (undo-tree-id375 . -11) (undo-tree-id376 . -11) (undo-tree-id377 . -11) (undo-tree-id378 . -11) (undo-tree-id379 . -11) (undo-tree-id380 . -11) (undo-tree-id381 . -10) (undo-tree-id382 . -10) (undo-tree-id383 . -10) (undo-tree-id384 . -10) (undo-tree-id385 . -10) (undo-tree-id386 . -10) (undo-tree-id387 . -10) (undo-tree-id388 . -10) (undo-tree-id389 . -10) (undo-tree-id390 . -10) (undo-tree-id391 . -10) (undo-tree-id392 . -9) (undo-tree-id393 . -9) (undo-tree-id394 . -9) (undo-tree-id395 . -9) (undo-tree-id396 . -9) (undo-tree-id397 . -9) (undo-tree-id398 . -9) (undo-tree-id399 . -9) (undo-tree-id400 . -9) (undo-tree-id401 . -9) (undo-tree-id402 . -9) (undo-tree-id403 . -8) (undo-tree-id404 . -8) (undo-tree-id405 . -8) (undo-tree-id406 . -8) (undo-tree-id407 . -8) (undo-tree-id408 . -8) (undo-tree-id409 . -8) (undo-tree-id410 . -8) (undo-tree-id411 . -8) (undo-tree-id412 . -8) (undo-tree-id413 . -8) (undo-tree-id414 . -8) (undo-tree-id415 . -8) (undo-tree-id416 . -7) (undo-tree-id417 . -7) (undo-tree-id418 . -7) (undo-tree-id419 . -7) (undo-tree-id420 . -7) (undo-tree-id421 . -7) (undo-tree-id422 . -7) (undo-tree-id423 . -7) (undo-tree-id424 . -7) (undo-tree-id425 . -7) (undo-tree-id426 . -7) (undo-tree-id427 . -6) (undo-tree-id428 . -6) (undo-tree-id429 . -6) (undo-tree-id430 . -6) (undo-tree-id431 . -6) (undo-tree-id432 . -6) (undo-tree-id433 . -6) (undo-tree-id434 . -6) (undo-tree-id435 . -6) (undo-tree-id436 . -6) (undo-tree-id437 . -6) (undo-tree-id438 . -5) (undo-tree-id439 . -5) (undo-tree-id440 . -5) (undo-tree-id441 . -5) (undo-tree-id442 . -5) (undo-tree-id443 . -5) (undo-tree-id444 . -5) (undo-tree-id445 . -5) (undo-tree-id446 . -5) (undo-tree-id447 . -5) (undo-tree-id448 . -5) (undo-tree-id449 . -4) (undo-tree-id450 . -4) (undo-tree-id451 . -4) (undo-tree-id452 . -4) (undo-tree-id453 . -4) (undo-tree-id454 . -4) (undo-tree-id455 . -4) (undo-tree-id456 . -4) (undo-tree-id457 . -4) (undo-tree-id458 . -4) (undo-tree-id459 . -4) (undo-tree-id460 . -3) (undo-tree-id461 . -3) (undo-tree-id462 . -3) (undo-tree-id463 . -3) (undo-tree-id464 . -3) (undo-tree-id465 . -3) (undo-tree-id466 . -3) (undo-tree-id467 . -3) (undo-tree-id468 . -3) (undo-tree-id469 . -3) (undo-tree-id470 . -3) (undo-tree-id471 . -2) (undo-tree-id472 . -2) (undo-tree-id473 . -2) (undo-tree-id474 . -2) (undo-tree-id475 . -2) (undo-tree-id476 . -2) (undo-tree-id477 . -2) (undo-tree-id478 . -2) (undo-tree-id479 . -2) (undo-tree-id480 . -2) (undo-tree-id481 . -2) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -175) (undo-tree-id494 . -7) (t 26275 1556 0 0)) nil (26275 1562 865983 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 601 . 602) (nil fontified nil 400 . 602) (400 . 602)) nil (26275 1562 865723 0) 0 nil])
([nil nil ((558 . 561) (#("  " 0 2 (fontified nil)) . 558) (535 . 538) (#("  " 0 2 (fontified nil)) . 535) (522 . 525) (#("  " 0 2 (fontified nil)) . 522) (486 . 489) (#("  " 0 2 (fontified nil)) . 486) (459 . 462) (#("  " 0 2 (fontified nil)) . 459) 602) nil (26275 1562 865717 0) 0 nil])
([nil nil ((#("key" 0 3 (face font-lock-string-face fontified t)) . -553) (undo-tree-id688 . -3) (undo-tree-id689 . -3) (undo-tree-id690 . -3) (undo-tree-id691 . -3) (undo-tree-id692 . -3) (undo-tree-id693 . -3) (undo-tree-id694 . -3) (undo-tree-id695 . -3) (undo-tree-id696 . -3) (undo-tree-id697 . -3) (undo-tree-id698 . -3) (undo-tree-id699 . -3) (undo-tree-id700 . -3) (undo-tree-id701 . -3) (undo-tree-id702 . -3) (undo-tree-id703 . -3) (undo-tree-id704 . -3) (undo-tree-id705 . -3) (undo-tree-id706 . -3) (undo-tree-id707 . -3) (undo-tree-id708 . -3) (undo-tree-id709 . -3) (undo-tree-id710 . -3) (undo-tree-id711 . -3) (undo-tree-id712 . -3) (undo-tree-id713 . -3) (undo-tree-id714 . -3) (undo-tree-id715 . -3) (undo-tree-id716 . -3) (undo-tree-id717 . -3) (undo-tree-id718 . -3) (undo-tree-id719 . -3) (undo-tree-id720 . -3) (undo-tree-id721 . -3) (undo-tree-id722 . -3) (undo-tree-id723 . -3) (undo-tree-id724 . -3) (undo-tree-id725 . -3) (undo-tree-id726 . -3) (undo-tree-id727 . -3) (undo-tree-id728 . -3) (undo-tree-id729 . -3) (undo-tree-id730 . -3) (undo-tree-id731 . -3) (undo-tree-id732 . -3) (undo-tree-id733 . -3) (undo-tree-id734 . -3) (undo-tree-id735 . -3) 556 (t 26275 1562 0 0)) nil (26275 1579 533259 0) 0 nil])
([nil nil ((#("api-" 0 4 (face font-lock-string-face fontified t)) . -549) (undo-tree-id607 . -4) (undo-tree-id608 . -4) (undo-tree-id609 . -4) (undo-tree-id610 . -4) (undo-tree-id611 . -4) (undo-tree-id612 . -4) (undo-tree-id613 . -4) (undo-tree-id614 . -4) (undo-tree-id615 . -4) (undo-tree-id616 . -4) (undo-tree-id617 . -4) (undo-tree-id618 . -4) (undo-tree-id619 . -4) (undo-tree-id620 . -4) (undo-tree-id621 . -4) (undo-tree-id622 . -4) (undo-tree-id623 . -4) (undo-tree-id624 . -4) (undo-tree-id625 . -4) (undo-tree-id626 . -4) (undo-tree-id627 . -4) (undo-tree-id628 . -4) (undo-tree-id629 . -4) (undo-tree-id630 . -4) (undo-tree-id631 . -4) (undo-tree-id632 . -4) (undo-tree-id633 . -4) (undo-tree-id634 . -4) (undo-tree-id635 . -4) (undo-tree-id636 . -4) (undo-tree-id637 . -4) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (undo-tree-id640 . -4) (undo-tree-id641 . -4) (undo-tree-id642 . -4) (undo-tree-id643 . -4) (undo-tree-id644 . -4) (undo-tree-id645 . -4) (undo-tree-id646 . -4) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (undo-tree-id650 . -4) (undo-tree-id651 . -4) (undo-tree-id652 . -4) (undo-tree-id653 . -4) (undo-tree-id654 . -4) (undo-tree-id655 . -4) (undo-tree-id656 . -4) (undo-tree-id657 . -4) (undo-tree-id658 . -4) (undo-tree-id659 . -4) (undo-tree-id660 . -4) (undo-tree-id661 . -4) (undo-tree-id662 . -4) (undo-tree-id663 . -4) (undo-tree-id664 . -4) (undo-tree-id665 . -4) (undo-tree-id666 . -4) (undo-tree-id667 . -4) (undo-tree-id668 . -4) (undo-tree-id669 . -4) (undo-tree-id670 . -4) (undo-tree-id671 . -4) (undo-tree-id672 . -4) (undo-tree-id673 . -4) (undo-tree-id674 . -4) (undo-tree-id675 . -4) (undo-tree-id676 . -4) (undo-tree-id677 . -4) (undo-tree-id678 . -4) (undo-tree-id679 . -4) (undo-tree-id680 . -4) (undo-tree-id681 . -4) (undo-tree-id682 . -4) (undo-tree-id683 . -4) (undo-tree-id684 . -4) (undo-tree-id685 . -4) (undo-tree-id686 . -4) (undo-tree-id687 . -4) 553) nil (26275 1579 533243 0) 0 nil])
([nil nil ((#("your-" 0 5 (face font-lock-string-face fontified t)) . -544) (undo-tree-id495 . -5) (undo-tree-id496 . -5) (undo-tree-id497 . -5) (undo-tree-id498 . -5) (undo-tree-id499 . -5) (undo-tree-id500 . -5) (undo-tree-id501 . -5) (undo-tree-id502 . -5) (undo-tree-id503 . -5) (undo-tree-id504 . -5) (undo-tree-id505 . -5) (undo-tree-id506 . -5) (undo-tree-id507 . -5) (undo-tree-id508 . -5) (undo-tree-id509 . -5) (undo-tree-id510 . -5) (undo-tree-id511 . -5) (undo-tree-id512 . -5) (undo-tree-id513 . -5) (undo-tree-id514 . -5) (undo-tree-id515 . -5) (undo-tree-id516 . -5) (undo-tree-id517 . -5) (undo-tree-id518 . -5) (undo-tree-id519 . -5) (undo-tree-id520 . -5) (undo-tree-id521 . -5) (undo-tree-id522 . -5) (undo-tree-id523 . -5) (undo-tree-id524 . -5) (undo-tree-id525 . -5) (undo-tree-id526 . -5) (undo-tree-id527 . -5) (undo-tree-id528 . -5) (undo-tree-id529 . -5) (undo-tree-id530 . -5) (undo-tree-id531 . -5) (undo-tree-id532 . -5) (undo-tree-id533 . -5) (undo-tree-id534 . -5) (undo-tree-id535 . -5) (undo-tree-id536 . -5) (undo-tree-id537 . -5) (undo-tree-id538 . -5) (undo-tree-id539 . -5) (undo-tree-id540 . -5) (undo-tree-id541 . -5) (undo-tree-id542 . -5) (undo-tree-id543 . -5) (undo-tree-id544 . -5) (undo-tree-id545 . -5) (undo-tree-id546 . -5) (undo-tree-id547 . -5) (undo-tree-id548 . -5) (undo-tree-id549 . -5) (undo-tree-id550 . -5) (undo-tree-id551 . -5) (undo-tree-id552 . -5) (undo-tree-id553 . -5) (undo-tree-id554 . -5) (undo-tree-id555 . -5) (undo-tree-id556 . -5) (undo-tree-id557 . -5) (undo-tree-id558 . -5) (undo-tree-id559 . -5) (undo-tree-id560 . -5) (undo-tree-id561 . -5) (undo-tree-id562 . -5) (undo-tree-id563 . -5) (undo-tree-id564 . -5) (undo-tree-id565 . -5) (undo-tree-id566 . -5) (undo-tree-id567 . -5) (undo-tree-id568 . -5) (undo-tree-id569 . -5) (undo-tree-id570 . -5) (undo-tree-id571 . -5) (undo-tree-id572 . -5) (undo-tree-id573 . -5) (undo-tree-id574 . -5) (undo-tree-id575 . -5) (undo-tree-id576 . -5) (undo-tree-id577 . -5) (undo-tree-id578 . -5) (undo-tree-id579 . -5) (undo-tree-id580 . -5) (undo-tree-id581 . -5) (undo-tree-id582 . -5) (undo-tree-id583 . -5) (undo-tree-id584 . -5) (undo-tree-id585 . -5) (undo-tree-id586 . -5) (undo-tree-id587 . -5) (undo-tree-id588 . -5) (undo-tree-id589 . -5) (undo-tree-id590 . -5) (undo-tree-id591 . -5) (undo-tree-id592 . -5) (undo-tree-id593 . -5) (undo-tree-id594 . -5) (undo-tree-id595 . -5) (undo-tree-id596 . -5) (undo-tree-id597 . -5) (undo-tree-id598 . -5) (undo-tree-id599 . -5) (undo-tree-id600 . -5) (undo-tree-id601 . -5) (undo-tree-id602 . -5) (undo-tree-id603 . -5) (undo-tree-id604 . -5) (undo-tree-id605 . -5) (undo-tree-id606 . -5) 549) nil (26275 1579 533211 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 594 . 595) (nil fontified nil 544 . 595) (544 . 595)) nil (26275 1579 533154 0) 0 nil])
([nil nil ((369 . 372) (t 26275 1579 0 0)) nil (26275 1646 524667 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 513 . 514) (nil fontified nil 372 . 514) (372 . 514)) nil (26275 1646 524662 0) 0 nil])
([nil nil ((#("(setq gptel-model \"moonshot-v1-8k\")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 18 (fontified t) 18 34 (face font-lock-string-face fontified t) 34 35 (face (rainbow-delimiters-depth-2-face) fontified t)) . 241) (undo-tree-id139 . -35) (undo-tree-id140 . -35) (undo-tree-id141 . -35) (undo-tree-id142 . -35) (undo-tree-id143 . -35) (undo-tree-id144 . -35) (undo-tree-id145 . -35) (undo-tree-id146 . -35) (undo-tree-id147 . -35) (undo-tree-id148 . -35) (undo-tree-id149 . -35) (undo-tree-id150 . -35) (undo-tree-id151 . -35) (undo-tree-id152 . -35) (undo-tree-id153 . -35) (undo-tree-id154 . -35) (undo-tree-id155 . -35) (undo-tree-id156 . -35) (undo-tree-id157 . -35) (undo-tree-id158 . -35) (undo-tree-id159 . -35) (undo-tree-id160 . -35) (undo-tree-id161 . -35) (undo-tree-id162 . -35) (undo-tree-id163 . -35) (undo-tree-id164 . -35) (undo-tree-id165 . -35) (undo-tree-id166 . -35) (undo-tree-id167 . -35) (undo-tree-id168 . -35) (undo-tree-id169 . -35) (undo-tree-id170 . -35) (undo-tree-id171 . -35) (undo-tree-id172 . -35) (undo-tree-id173 . -35) (t 26275 1646 0 0)) nil (26275 2368 943041 0) 0 nil])
([nil nil ((#("
  " 0 1 (fontified t) 1 3 (fontified t)) . 238) (undo-tree-id0 . -3) (undo-tree-id1 . -3) (undo-tree-id2 . -3) (undo-tree-id3 . -3) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (undo-tree-id6 . -3) (undo-tree-id7 . -3) (undo-tree-id8 . -3) (undo-tree-id9 . -3) (undo-tree-id10 . -3) (undo-tree-id11 . -3) (undo-tree-id12 . -3) (undo-tree-id13 . -3) (undo-tree-id14 . -3) (undo-tree-id15 . -3) (undo-tree-id16 . -3) (undo-tree-id17 . -3) (undo-tree-id18 . -3) (undo-tree-id19 . -3) (undo-tree-id20 . -3) (undo-tree-id21 . -3) (undo-tree-id22 . -3) (undo-tree-id23 . -3) (undo-tree-id24 . -3) (undo-tree-id25 . -3) (undo-tree-id26 . -3) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . -3) (undo-tree-id34 . -3) (undo-tree-id35 . -3) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (undo-tree-id38 . -3) (undo-tree-id39 . -3) (undo-tree-id40 . -3) (undo-tree-id41 . -3) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -3) (undo-tree-id50 . -3) (undo-tree-id51 . -3) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -3) (undo-tree-id62 . -3) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) (undo-tree-id72 . -3) (undo-tree-id73 . -3) (undo-tree-id74 . -3) (undo-tree-id75 . -3) (undo-tree-id76 . -3) (undo-tree-id77 . -3) (undo-tree-id78 . -3) (undo-tree-id79 . -3) (undo-tree-id80 . -3) (undo-tree-id81 . -3) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -3) (undo-tree-id85 . -3) (undo-tree-id86 . -3) (undo-tree-id87 . -3) (undo-tree-id88 . -3) (undo-tree-id89 . -3) (undo-tree-id90 . -3) (undo-tree-id91 . -3) (undo-tree-id92 . -3) (undo-tree-id93 . -3) (undo-tree-id94 . -3) (undo-tree-id95 . -3) (undo-tree-id96 . -3) (undo-tree-id97 . -3) (undo-tree-id98 . -3) (undo-tree-id99 . -3) (undo-tree-id100 . -3) (undo-tree-id101 . -3) (undo-tree-id102 . -3) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (undo-tree-id105 . -3) (undo-tree-id106 . -3) (undo-tree-id107 . -3) (undo-tree-id108 . -3) (undo-tree-id109 . -3) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -3) (undo-tree-id113 . -1) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -3) (undo-tree-id117 . -3) (undo-tree-id118 . -3) (undo-tree-id119 . -3) (undo-tree-id120 . -3) (undo-tree-id121 . -3) (undo-tree-id122 . -3) (undo-tree-id123 . -3) (undo-tree-id124 . -3) (undo-tree-id125 . -3) (undo-tree-id126 . -3) (undo-tree-id127 . -3) (undo-tree-id128 . -3) (undo-tree-id129 . -3) (undo-tree-id130 . -3) (undo-tree-id131 . -3) (undo-tree-id132 . -3) (undo-tree-id133 . -3) (undo-tree-id134 . -3) (undo-tree-id135 . -3) (undo-tree-id136 . -3) (undo-tree-id137 . -3) (undo-tree-id138 . -3) 241) nil (26275 2368 943019 0) 0 nil])
([nil nil ((#("(defun gptel+ ()" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 13 (face font-lock-function-name-face fontified t) 13 14 (fontified t) 14 15 (face (rainbow-delimiters-depth-3-face) fontified t) 15 16 (face (rainbow-delimiters-depth-3-face) fontified t)) . 334) (undo-tree-id180 . -16) (t 26275 2368 0 0)) nil (26275 2380 215560 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 334) (undo-tree-id179 . -1)) nil (26275 2380 215558 0) 0 nil])
([nil nil ((#("              (interactive)" 0 14 (fontified t) 14 15 (face (rainbow-delimiters-depth-2-face) fontified t) 15 26 (face font-lock-keyword-face fontified t) 26 27 (face (rainbow-delimiters-depth-2-face) fontified t)) . 334) (undo-tree-id178 . -27)) nil (26275 2380 215555 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 334) (undo-tree-id177 . -1)) nil (26275 2380 215554 0) 0 nil])
([nil nil ((#("              (let ((locale-coding-system 'utf-8))" 0 14 (fontified t) 14 15 (face (rainbow-delimiters-depth-2-face) fontified t) 15 18 (face font-lock-keyword-face fontified t) 18 19 (fontified t) 19 20 (face (rainbow-delimiters-depth-3-face) fontified t) 20 21 (face (rainbow-delimiters-depth-4-face) fontified t) 21 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-4-face) fontified t) 49 50 (face (rainbow-delimiters-depth-3-face) fontified t)) . 334) (undo-tree-id176 . -50)) nil (26275 2380 215552 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 334) (undo-tree-id175 . -1)) nil (26275 2380 215548 0) 0 nil])
([nil nil ((#("                (call-interactively #'gptel)))" 0 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 43 (fontified t) 43 44 (face (rainbow-delimiters-depth-2-face) fontified t) 44 45 (face (rainbow-delimiters-depth-1-face) fontified t) 45 46 (face (rainbow-delimiters-unmatched-face) fontified t)) . 334) (undo-tree-id174 . -46)) nil (26275 2380 215541 0) 0 nil])
([nil nil ((apply -3 500 565 undo--wrap-and-run-primitive-undo 500 565 ((503 . 506) 509))) nil (26275 2843 680790 0) 0 nil])
([nil current ((apply 3 500 561 undo--wrap-and-run-primitive-undo 500 561 ((#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -503)))) nil (26275 2876 388378 0) 0 nil])
nil
